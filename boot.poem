import "Math" "random" random 0 1
include "./engine.poem"
include "fantasyinternet.poem/display.poem"
include "fantasyinternet.poem/graphics.wast"
include "fantasyinternet.poem/game_input.poem"
include "fantasyinternet.poem/audio.poem"

var level =
  :data =
    :platforms = array
var player =
  :width = 16
  :height = 16
  :frame = 0
  :x = 160-8
  :y = 140
  :vx = 0
  :vy = 0

func reset
  player:vx = 0
  player:vy = -.1
  player:gear = true
  var num = floor (array_length level:data:platforms) * (random)
  player:x = level:data:platforms[num]:x + 8
  player:y = level:data:platforms[num]:y - player:height
  start_tone 0 55 1 4
  ramp_volume 0 0 1024

export "init" init
  set_display_mode 1 320 180
  set_frame_rate 60 `frames per second`
  load_sprite "level1" level
  load_level "level1" level
  load_sprite "taxi" player

export "step" step
  player:vy += 0.01 * 0.25 ~ gravity
  player:x += player:vx
  player:y += player:vy
  if get_game_button_b
    player:vx += 0.01 * get_game_axis_x
    player:vy -= 0.01
    player:thrust = true
    player:gear = false
    start_tone 1 110 1 4
  else
    ramp_volume 1 0 100
    player:thrust = false
  if get_game_button_y
    if player:gearctrl
      player:gear = (player:gear == false)
      player:gearctrl = false
  else
    player:gearctrl = true
  player:frame = player:gear*2 + player:thrust

export "display" display
  set_blending_mode 0
  draw_sprite level
  set_blending_mode 1
  for platform in level:data:platforms
    if platform:width == null
      platform:width = 32
      platform:height = 4
    rect platform:x platform:y platform:width platform:height
    if player:gear && collides player platform
      player:vx = 0
      player:vy = 0
      player:y = platform:y - player:height
  if sprite_collide player
    reset
  draw_sprite player
  display_memory

